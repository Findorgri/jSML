/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
package org.openmuc.jsml.test.structures;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;

import org.junit.Assert;
import org.junit.Test;
import org.openmuc.jsml.structures.SmlListEntry;
import org.openmuc.jsml.structures.SmlMessage;
import org.openmuc.jsml.structures.responses.SmlGetListRes;

public class DecodingEDL40Test {

    @Test
    public void decodeTimeTagMessage() throws IOException {
        byte[] message = new byte[] { (byte) 0x76, (byte) 0x09, (byte) 0x67, (byte) 0x08, (byte) 0x00, (byte) 0x00,
                (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x62, (byte) 0x04, (byte) 0x62, (byte) 0x00,
                (byte) 0x72, (byte) 0x63, (byte) 0x01, (byte) 0x01, (byte) 0x76, (byte) 0x01, (byte) 0x07, (byte) 0x1f,
                (byte) 0x15, (byte) 0xb0, (byte) 0x8c, (byte) 0x68, (byte) 0x5c, (byte) 0x09, (byte) 0xcd, (byte) 0x02,
                (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x09, (byte) 0x08,
                (byte) 0x0c, (byte) 0x2a, (byte) 0xec, (byte) 0x2d, (byte) 0x4c, (byte) 0x65, (byte) 0x63, (byte) 0x01,
                (byte) 0x01, (byte) 0x63, (byte) 0x6c, (byte) 0xc5, (byte) 0x00, (byte) 0x76, (byte) 0x09, (byte) 0x68,
                (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x62,
                (byte) 0x05, (byte) 0x62, (byte) 0x00, (byte) 0x72, (byte) 0x63, (byte) 0x07, (byte) 0x01, (byte) 0x77,
                (byte) 0x01, (byte) 0x09, (byte) 0x08, (byte) 0x0c, (byte) 0x2a, (byte) 0xec, (byte) 0x2d, (byte) 0x4c,
                (byte) 0x65, (byte) 0x63, (byte) 0x01, (byte) 0x72, (byte) 0x62, (byte) 0x01, (byte) 0x64, (byte) 0x1b,
                (byte) 0xcb, (byte) 0x2d, (byte) 0x7e, (byte) 0x77, (byte) 0x07, (byte) 0x81, (byte) 0x81, (byte) 0xc7,
                (byte) 0x82, (byte) 0x03, (byte) 0xff, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x04,
                (byte) 0x45, (byte) 0x4d, (byte) 0x48, (byte) 0x01, (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00,
                (byte) 0x00, (byte) 0x00, (byte) 0x09, (byte) 0xff, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x01,
                (byte) 0x09, (byte) 0x08, (byte) 0x0c, (byte) 0x2a, (byte) 0xec, (byte) 0x2d, (byte) 0x4c, (byte) 0x65,
                (byte) 0x63, (byte) 0x01, (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x08,
                (byte) 0x00, (byte) 0xff, (byte) 0x63, (byte) 0x01, (byte) 0x88, (byte) 0x01, (byte) 0x62, (byte) 0x1e,
                (byte) 0x52, (byte) 0xff, (byte) 0x54, (byte) 0x03, (byte) 0xe9, (byte) 0x1f, (byte) 0x01, (byte) 0x77,
                (byte) 0x07, (byte) 0x01, (byte) 0x00, (byte) 0x02, (byte) 0x08, (byte) 0x00, (byte) 0xff, (byte) 0x63,
                (byte) 0x01, (byte) 0x88, (byte) 0x01, (byte) 0x62, (byte) 0x1e, (byte) 0x52, (byte) 0xff, (byte) 0x53,
                (byte) 0x0a, (byte) 0x61, (byte) 0x01, (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00, (byte) 0x01,
                (byte) 0x08, (byte) 0x01, (byte) 0xff, (byte) 0x01, (byte) 0x01, (byte) 0x62, (byte) 0x1e, (byte) 0x52,
                (byte) 0xff, (byte) 0x54, (byte) 0x03, (byte) 0xe9, (byte) 0x1f, (byte) 0x01, (byte) 0x77, (byte) 0x07,
                (byte) 0x01, (byte) 0x00, (byte) 0x02, (byte) 0x08, (byte) 0x01, (byte) 0xff, (byte) 0x01, (byte) 0x01,
                (byte) 0x62, (byte) 0x1e, (byte) 0x52, (byte) 0xff, (byte) 0x53, (byte) 0x0a, (byte) 0x61, (byte) 0x01,
                (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x08, (byte) 0x02, (byte) 0xff,
                (byte) 0x01, (byte) 0x01, (byte) 0x62, (byte) 0x1e, (byte) 0x52, (byte) 0xff, (byte) 0x52, (byte) 0x00,
                (byte) 0x01, (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00, (byte) 0x0f, (byte) 0x07, (byte) 0x00,
                (byte) 0xff, (byte) 0x01, (byte) 0x01, (byte) 0x62, (byte) 0x1b, (byte) 0x52, (byte) 0xff, (byte) 0x53,
                (byte) 0x02, (byte) 0x4c, (byte) 0x01, (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00, (byte) 0x23,
                (byte) 0x07, (byte) 0x00, (byte) 0xff, (byte) 0x01, (byte) 0x01, (byte) 0x62, (byte) 0x1b, (byte) 0x52,
                (byte) 0xff, (byte) 0x52, (byte) 0x49, (byte) 0x01, (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00,
                (byte) 0x37, (byte) 0x07, (byte) 0x00, (byte) 0xff, (byte) 0x01, (byte) 0x01, (byte) 0x62, (byte) 0x1b,
                (byte) 0x52, (byte) 0xff, (byte) 0x53, (byte) 0x00, (byte) 0x94, (byte) 0x01, (byte) 0x77, (byte) 0x07,
                (byte) 0x01, (byte) 0x00, (byte) 0x4b, (byte) 0x07, (byte) 0x00, (byte) 0xff, (byte) 0x01, (byte) 0x01,
                (byte) 0x62, (byte) 0x1b, (byte) 0x52, (byte) 0xff, (byte) 0x53, (byte) 0x01, (byte) 0x6f, (byte) 0x01,
                (byte) 0x77, (byte) 0x07, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x11, (byte) 0x00, (byte) 0xff,
                (byte) 0x63, (byte) 0x01, (byte) 0x88, (byte) 0x72, (byte) 0x62, (byte) 0x03, (byte) 0x73, (byte) 0x65,
                (byte) 0x4e, (byte) 0xdf, (byte) 0x67, (byte) 0x4c, (byte) 0x52, (byte) 0x00, (byte) 0x52, (byte) 0x00,
                (byte) 0x62, (byte) 0x1e, (byte) 0x52, (byte) 0xff, (byte) 0x54, (byte) 0x03, (byte) 0xe9, (byte) 0x12,
                (byte) 0x83, (byte) 0x04, (byte) 0x0f, (byte) 0xdf, (byte) 0xa7, (byte) 0xe7, (byte) 0xd8, (byte) 0x0e,
                (byte) 0xfb, (byte) 0xf5, (byte) 0xf0, (byte) 0xcf, (byte) 0xe8, (byte) 0x70, (byte) 0x5a, (byte) 0x43,
                (byte) 0x10, (byte) 0x23, (byte) 0x52, (byte) 0xb8, (byte) 0x92, (byte) 0x68, (byte) 0x22, (byte) 0xde,
                (byte) 0x02, (byte) 0x37, (byte) 0x0b, (byte) 0xb0, (byte) 0xac, (byte) 0x19, (byte) 0x0e, (byte) 0xcc,
                (byte) 0x90, (byte) 0x41, (byte) 0xce, (byte) 0x2f, (byte) 0xc0, (byte) 0x12, (byte) 0x27, (byte) 0x6a,
                (byte) 0x28, (byte) 0xc9, (byte) 0xf3, (byte) 0x73, (byte) 0xfb, (byte) 0x1f, (byte) 0xb9, (byte) 0x68,
                (byte) 0x38, (byte) 0x7f, (byte) 0x00, (byte) 0x03, (byte) 0x77, (byte) 0x07, (byte) 0x81, (byte) 0x81,
                (byte) 0xc7, (byte) 0x82, (byte) 0x05, (byte) 0xff, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x01,
                (byte) 0x83, (byte) 0x02, (byte) 0x60, (byte) 0xd6, (byte) 0x6c, (byte) 0x2e, (byte) 0xf2, (byte) 0x3e,
                (byte) 0xdf, (byte) 0x14, (byte) 0xc7, (byte) 0x60, (byte) 0x62, (byte) 0x23, (byte) 0x2e, (byte) 0x3f,
                (byte) 0x6e, (byte) 0xc5, (byte) 0x85, (byte) 0x96, (byte) 0x6c, (byte) 0x4b, (byte) 0x40, (byte) 0x0c,
                (byte) 0x39, (byte) 0x0d, (byte) 0xa7, (byte) 0xf0, (byte) 0xf4, (byte) 0xf4, (byte) 0x47, (byte) 0x35,
                (byte) 0x45, (byte) 0x08, (byte) 0x5c, (byte) 0xc8, (byte) 0x25, (byte) 0x29, (byte) 0x37, (byte) 0xad,
                (byte) 0x92, (byte) 0x82, (byte) 0xd7, (byte) 0x97, (byte) 0x6c, (byte) 0xda, (byte) 0x0a, (byte) 0x78,
                (byte) 0x51, (byte) 0x4c, (byte) 0x01, (byte) 0x77, (byte) 0x07, (byte) 0x99, (byte) 0x00, (byte) 0x00,
                (byte) 0x00, (byte) 0x00, (byte) 0x11, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x69,
                (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x08, (byte) 0x02, (byte) 0xff,
                (byte) 0x01, (byte) 0x01, (byte) 0x72, (byte) 0x62, (byte) 0x01, (byte) 0x64, (byte) 0x44, (byte) 0x58,
                (byte) 0x73, (byte) 0x63, (byte) 0xe7, (byte) 0x22, (byte) 0x00, (byte) 0x76, (byte) 0x09, (byte) 0x69,
                (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x62,
                (byte) 0x06, (byte) 0x62, (byte) 0x00, (byte) 0x72, (byte) 0x63, (byte) 0x02, (byte) 0x01, (byte) 0x71,
                (byte) 0x01, (byte) 0x63, (byte) 0x35, (byte) 0x43, (byte) 0x00, (byte) 0x00 };
        DataInputStream is = new DataInputStream(new ByteArrayInputStream(message));

        SmlMessage smlMessage = new SmlMessage();
        Assert.assertTrue(smlMessage.decodeAndCheck(is));

        smlMessage = new SmlMessage();
        Assert.assertTrue(smlMessage.decodeAndCheck(is));

        SmlGetListRes getListRes = (SmlGetListRes) smlMessage.getMessageBody().getChoice();
        for (SmlListEntry listEntry : getListRes.getValList().getValListEntry()) {
            if (listEntry.getValTime().isSelected()) {
                if (listEntry.getValTime().getTag().getVal() == 3) {
                    // System.out.println("timestamp: "
                    // + ((SML_TimestampLocal)
                    // (listEntry.getValTime().getChoice())).getTimestamp().getVal());
                }
            }
        }

        SmlMessage smlMessage3 = new SmlMessage();
        Assert.assertTrue(smlMessage3.decodeAndCheck(is));
        // System.out.println(Integer.toHexString(smlMessage3.getMessageBody().getTag().getVal()));

    }

}
